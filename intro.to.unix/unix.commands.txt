# Working with directories & files

ls = "list files/folders"
      ls –l   or  ll
      
cd = "change directory (move around)"
      cd (home) ; cd dir (go to dir); cd .. (one level up); cd ../../ (two levels up)"
      
pwd = "see working directory"

cp = "copy files"
      cp /route/to/file/to/copy/file /new/location/of/file
      cp –r /dir/to/copy/dir  /location/for/dir/copy # Copy dir and its contents

mv = "move or rename files"
      mv /old/location/for/my/file  /new/location/for/my/file
      mv old_name new_name

rm = "delete a file or directory" 
      rm /file/to/remove
      rm –rf /remove/directory/and/all/contents  (use carefully!)

rmdir = "delete a directory"

mkdir = make directory"

less/cat = "see what’s inside a file"

head/tail = "see beginning / end of a file"
       tail -n 300 file (see last 300 lines); head -n 300

cat = "concatenate files (also print files to the terminal)"
      cat file1 file2 > new.cat.file"

# Permissions
chmod = "change permissions"
       chmod a+x executable.file
       chmod 755 file  (owner:group:world permissions)"

chown = “change ownership of a file or directory
        chown user:group file # Assign file to a new user and group


# Processes & super user

top = "see running processes"

kill = "kill a process"

sudo = "request root access for a task (not always available)"

#Common Tools

emacs/vim/nano: "useful text editors"

grep = search text for a pattern" 
     grep pattern file # search pattern in file
     grep -c pattern file # count pattern in file

awk: "Powerful text editor"
	 awk '{print $1, $5}' table # Prints fields 1 and 5 from table

sed  = "search and replace patterns in files"
	  sed "s/rat/cat/g" infile > outfile # Search "rat" and replace by "cat" in infile
	  sed "s/rat//g" infile > outfile # Remove "rat" from infile
	  
	#Combine commands with a pipe
	output | input
       ll | grep -c pattern (count filenames with pattern)
       ll | grep pattern > file
       cut: "cuts characters from a file"
       less file | cut -f 2 -d "-" # Bring the 2nd field from file, separated by "-"

sort = "sorts records"

uniq = "retrieves unique records"

	Ofter used together as sort | uniq      

wget (get files or directories from remote computers)
	wget http://linux.come/file
	

#Connectivity
ssh = remote connection to a machine"
    ssh user@machine (remote connection)
    scp file.to.copy user@machine:/path/to/location/to/copy # copy to a remote computer
    scp user@machine:/path/to/file . # copy from a remote location
    
#Manual
man = documentation about a command (also ‘program’ –h)"
      #Available for all core functions and programs

# Execute a program/script
  ./executable
  
Add programs to your search path permanently

	edit .bashrc # This is a file at your home with environmental variables
		emacs .bashrc
			export PATH=/path/to/file :$PATH


# Generate temporal variables
	
	var1=/path/to/file # set up variable
		${var1} # calls variable
		
		
# Loops
	Runs a function over several files

		If you have: file1, file2, ..., filen
			Then:
				for i in $(ls); do cut -f 2 ${i} > ${i}.out; done
					Cuts field 2 in each file and sends it to a corresponding output


# Execute functions in bashscripts
	emacs my.bash.script.sh
	
		#!/bin/bash
		for i in $(ls); do cut -f 2 ${i} > ${i}.out; done
					
     chmod a+x my.bash.script.sh # make script executable
     ./my.bash.script.sh # execute script
  
  
  

